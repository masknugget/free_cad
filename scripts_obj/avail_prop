obj.supportedProperties()

App::PropertyAcceleration
App::PropertyAngle
App::PropertyArea
App::PropertyBool
App::PropertyBoolList
App::PropertyColor
App::PropertyColorList
App::PropertyDirection
App::PropertyDistance
App::PropertyEnumeration
App::PropertyExpressionEngine
App::PropertyFile
App::PropertyFileIncluded
App::PropertyFloat
App::PropertyFloatConstraint
App::PropertyFloatList
App::PropertyFont
App::PropertyForce
App::PropertyFrequency
App::PropertyInteger
App::PropertyIntegerConstraint
App::PropertyIntegerList
App::PropertyIntegerSet
App::PropertyLength
App::PropertyLink
App::PropertyLinkChild
App::PropertyLinkGlobal
App::PropertyLinkHidden
App::PropertyLinkList
App::PropertyLinkListChild
App::PropertyLinkListGlobal
App::PropertyLinkListHidden
App::PropertyLinkSub
App::PropertyLinkSubChild
App::PropertyLinkSubGlobal
App::PropertyLinkSubHidden
App::PropertyLinkSubList
App::PropertyLinkSubListChild
App::PropertyLinkSubListGlobal
App::PropertyLinkSubListHidden
App::PropertyMap
App::PropertyMaterial
App::PropertyMaterialList
App::PropertyMatrix
App::PropertyPath
App::PropertyPercent
App::PropertyPersistentObject
App::PropertyPlacement
App::PropertyPlacementLink
App::PropertyPlacementList
App::PropertyPosition
App::PropertyPrecision
App::PropertyPressure
App::PropertyPythonObject
App::PropertyQuantity
App::PropertyQuantityConstraint
App::PropertySpeed
App::PropertyString
App::PropertyStringList
App::PropertyUUID
App::PropertyVacuumPermittivity
App::PropertyVector
App::PropertyVectorDistance
App::PropertyVectorList
App::PropertyVolume
App::PropertyXLink
App::PropertyXLinkList
App::PropertyXLinkSub
App::PropertyXLinkSubList
Mesh::PropertyCurvatureList
Mesh::PropertyMeshKernel
Mesh::PropertyNormalList
Part::PropertyFilletEdges
Part::PropertyGeometryList
Part::PropertyPartShape
Part::PropertyShapeHistory
Path::PropertyPath
Path::PropertyTool
Path::PropertyTooltable
Sketcher::PropertyConstraintList
Spreadsheet::PropertyColumnWidths
Spreadsheet::PropertyRowHeights
Spreadsheet::PropertySheet
Spreadsheet::PropertySpreadsheetQuantity
TechDraw::PropertyCenterLineList
TechDraw::PropertyCosmeticEdgeList
TechDraw::PropertyCosmeticVertexList
TechDraw::PropertyGeomFormatList


Property Type

obj.setEditorMode("MyPropertyName", mode)

 0 -- default mode, read and write
 1 -- read-only
 2 -- hidden

obj.addProperty("App::PropertyString","MyCustomProperty","","",8)

 0 -- Prop_None, No special property type
 1 -- Prop_ReadOnly, Property is read-only in the editor
 2 -- Prop_Transient, Property won't be saved to file
 4 -- Prop_Hidden, Property won't appear in the editor
 8 -- Prop_Output, Modified property doesn't touch its parent container
 16 -- Prop_NoRecompute, Modified property doesn't touch its container for recompute




Introduction

    obj.supportedProperties()

You will get a list of available properties.

Creating a FeaturePython object and adding a property to it
This code will create an object with internal name InternalObjectName (automatically renamed to InternalObjectName001 and so on, if an object named InternalObjectName already exists) and give it the user-friendly label User-friendly label (this label will be displayed in the Tree view and Combo view. Expressions can refer to this object by its label using <<User-friendly label>>.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"


    obj.addProperty('App::PropertyBool', 'ThePropertyName', 'Subsection', "Description for tooltip")

App::PropertyBool is the type of the property. The different types are described in more detail below.

You can also use the short form which omits the last two arguments. The subsection defaults to Base, and the tooltip is not displayed with this form.

    obj.addProperty('App::PropertyBool', 'ThePropertyName')
    To get or set the property, use obj.ThePropertyName

    // set
    obj.ThePropertyName = True

    // get
    thePropertyValue = obj.ThePropertyName

If the type of the property is App::PropertyEnumeration, the setter has a special behaviour: setting a list of strings defines the cases allowed by the enumeration, setting a string selects one of these cases. To set the list of possible cases and set the current one, use:

// possible/allowed cases
    obj.ThePropertyName = ["aaa", "bbb", "ccc"]
    // set
    obj.ThePropertyName = "bbb"


App::PropertyAcceleration
A Template:TODOacceleration property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyAcceleration', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"


App::PropertyAngle
An angle property. It can contain an angle value. You can use "Value" variable to get float variable. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyAngle', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = 180
    obj.ThePropertyName // returns 180.0 deg
    obj.ThePropertyName.Value // returns 180.0

App::PropertyArea
A Template:TODOarea property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyArea', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyBool
A boolean property. It can contain True and False. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyBool', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = True
    obj.ThePropertyName = False
    obj.ThePropertyName // returns False

App::PropertyBoolList
A property containing a list of booleans. It can contain a python list of booleans, e.g. [True, False, True]. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyBoolList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [True, False, True]
    obj.ThePropertyName    // returns [True, False, True]
    obj.ThePropertyName[1] // returns False

App::PropertyColor
A color property. It can contain tuple of four float values. Each item can take values between 0.0 and 1.0. You can set red, green and blue values. Also you can set step transparency too. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyColor', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = (0.0, 1.0, 0.5, 0.8) // (Red, Green, Blue, Transparency)
    obj.ThePropertyName // returns (0.0, 1.0, 0.5, 0.8)

App::PropertyColorList
A Template:TODOcolorList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyColorList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyDirection
A Template:TODOdirection property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyDirection', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyDistance
A distance property. It can contain a distance value. You can use "Value" variable to get float variable. Values always must be in millimeters unit. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyDistance', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = 500
    obj.ThePropertyName // returns 500.0 mm
    obj.ThePropertyName.Value // returns 500.0

App::PropertyEnumeration
An enumeration property. The allowed items are defined by setting the property to a list. After that, it can contain items of the given list. The list of allowed items can be changed by setting the property to a list again. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyEnumeration', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = ["Foo", "Bar", "Baz"]  // set allowed items
    obj.ThePropertyName = "Foo"                  // choose single item
    obj.ThePropertyName = ["Foo", "Bar", "Quux"] // change allowed items
    obj.ThePropertyName = "Quux"                 // choose single item
    obj.ThePropertyName // returns "Quux"

App::PropertyExpressionEngine
A Template:TODOexpressionEngine property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyExpressionEngine', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyFile
A filename property. It can contain a string indicating the path to a filename Template:TODO:(Does it allow relative paths or absolute paths or both?). For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFile', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyFileIncluded
A Template:TODOfileIncluded property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFileIncluded', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyFloat
A float property. It can contain a float value. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFloat', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = 15.7
    obj.ThePropertyName // returns 15.7

App::PropertyFloatConstraint
A float constraint property. It can contain a float value. By using this property you can set start and finish values. Also you can set step interval too. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFloatConstraint', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = (50.0, 0.0, 100.0, 1.0) // (Default, Start, Finish, Step)
    obj.ThePropertyName // returns 50.0

App::PropertyFloatList
A float list property. It can contain list of float values. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFloatList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [12.7, 5.8, 28.6, 17.22] // Also it can be an empty list.
    obj.ThePropertyName // returns [12.7, 5.8, 28.6, 17.22]

App::PropertyFont
A Template:TODOfont property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFont', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyForce
A Template:TODOforce property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyForce', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyFrequency
A Template:TODOfrequency property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyFrequency', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyInteger
An integer property. It can contain an integer value. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyInteger', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = 25
    obj.ThePropertyName // returns 25

App::PropertyIntegerConstraint
An integer constraint property. It can contain an integer value. By using this property you can set start and finish values. Also you can set step interval too. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyIntegerConstraint', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = (50, 0, 100, 1) // (Default, Start, Finish, Step)
    obj.ThePropertyName // returns 50

App::PropertyIntegerList
An integer list property. It can contain list of integer values. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyIntegerList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [12, 5, 28, 17] // Also it can be an empty list.
    obj.ThePropertyName // returns [12, 5, 28, 17]

App::PropertyIntegerSet
A Template:TODOintegerSet property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyIntegerSet', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLength
A length property. It can contain a length value. You can use "Value" variable to get float variable. Values always must be in millimeters unit. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLength', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = 500
    obj.ThePropertyName // returns 500 mm
    obj.ThePropertyName.Value // returns 500

App::PropertyLink
A link property. It can contain link to an object. When you call this property, it will return the linked object. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    link_obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","LinkObjectName")
    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLink', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = link_obj
    obj.ThePropertyName // returns link_obj

App::PropertyLinkChild
A Template:TODOlinkChild property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkChild', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkGlobal
A Template:TODOlinkGlobal property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkGlobal', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkHidden
A Template:TODOlinkHidden property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkHidden', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkList
A link list property. It can contain list of linked objects. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    link_obj0=FreeCAD.ActiveDocument.addObject("App::FeaturePython","LinkObjectName0")
    link_obj1=FreeCAD.ActiveDocument.addObject("App::FeaturePython","LinkObjectName1")
    link_obj2=FreeCAD.ActiveDocument.addObject("App::FeaturePython","LinkObjectName2")

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [link_obj0, link_obj1, link_obj2]
    obj.ThePropertyName // returns [link_obj0, link_obj1, link_obj2]

App::PropertyLinkListChild
A Template:TODOlinkListChild property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkListChild', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkListGlobal
A Template:TODOlinkListGlobal property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkListGlobal', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkListHidden
A Template:TODOlinkListHidden property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkListHidden', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSub
A Template:TODOlinkSub property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSub', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubChild
A Template:TODOlinkSubChild property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubChild', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubGlobal
A Template:TODOlinkSubGlobal property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubGlobal', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubHidden
A Template:TODOlinkSubHidden property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubHidden', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubList
A Template:TODOlinkSubList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubListChild
    A Template:TODOlinkSubListChild property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubListChild', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubListGlobal
A Template:TODOlinkSubListGlobal property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubListGlobal', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyLinkSubListHidden
A Template:TODOlinkSubListHidden property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyLinkSubListHidden', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyMap
A Template:TODOmap property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyMap', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyMaterial
A material property. It can contain a FreeCAD material object. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import FreeCAD
    material=FreeCAD.Material()

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyMaterial', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = material
    obj.ThePropertyName // returns material

App::PropertyMaterialList
A material list property. It can contain list of materials. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import FreeCAD
    material0 = FreeCAD.Material()
    material1 = FreeCAD.Material()
    material2 = FreeCAD.Material()

    obj = FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyMaterialList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [material0, material1, material2] // Also it can be an empty list.
    obj.ThePropertyName // returns [material0, material1, material2]

App::PropertyMatrix
A Template:TODOmatrix property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyMatrix', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPath
A path property. It can contain a string representing a path to a folder Template:TODO:(does it also allow paths to files? does it allow relative or absolute paths or both?). For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPath', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPercent
A Template:TODOpercent property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPercent', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPersistentObject
A Template:TODOpersistentObject property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPersistentObject', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPlacement
A placement property. It can contain placement object. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import FreeCAD
    placement = FreeCAD.Placement()
    obj = FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPlacement', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = placement
    obj.ThePropertyName // returns placement

App::PropertyPlacementLink
A Template:TODOplacementLink property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPlacementLink', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPlacementList
A placement list property. It can contain list of placements. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import FreeCAD
    placement0 = FreeCAD.Placement()
    placement1 = FreeCAD.Placement()
    placement2 = FreeCAD.Placement()

    obj = FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPlacementList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [placement0, placement1, placement2]
    obj.ThePropertyName // returns [placement0, placement1, placement2]

App::PropertyPosition
A Template:TODOposition property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPosition', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPrecision
A Template:TODOprecision property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPrecision', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPressure
A Template:TODOpressure property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPressure', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyPythonObject
A Template:TODOpythonObject property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyPythonObject', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyQuantity
A Template:TODOquantity property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyQuantity', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyQuantityConstraint
A Template:TODOquantityConstraint property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyQuantityConstraint', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertySpeed
A Template:TODOspeed property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertySpeed', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyString
A Template:TODOstring property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyString', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyStringList
    A Template:TODOstringList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyStringList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyUUID
A Template:TODOuUID property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyUUID', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyVacuumPermittivity
A Template:TODOvacuumPermittivity property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyVacuumPermittivity', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyVector
A vector property. It can contain a FreeCAD vector object. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import FreeCAD
    vector = FreeCAD.Vector(0, -2, 5)

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyVector', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = vector
    obj.ThePropertyName // returns Vector(0, -2, 5)

App::PropertyVectorDistance
A Template:TODOvectorDistance property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyVectorDistance', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyVectorList
A vector list property. It can contain list of vectors. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import FreeCAD
    v0 = FreeCAD.Vector(0, 10, 0)
    v1 = FreeCAD.Vector(0, 10, 0)
    v2 = FreeCAD.Vector(30, -10, 0)
    v3 = FreeCAD.Vector(0, -10, 0)

    obj = FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyVectorList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [v0, v1, v2, v3]
    obj.ThePropertyName // returns [Vector(0, 10, 0), Vector(0, 10, 0), Vector(30, -10, 0), Vector(0, -10, 0)]

App::PropertyVolume
A Template:TODOvolume property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyVolume', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyXLink
A Template:TODOxLink property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyXLink', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyXLinkList
A Template:TODOxLinkList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyXLinkList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyXLinkSub
A Template:TODOxLinkSub property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyXLinkSub', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

App::PropertyXLinkSubList
A Template:TODOxLinkSubList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('App::PropertyXLinkSubList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Mesh::PropertyCurvatureList
A Template:TODOcurvatureList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Mesh::PropertyCurvatureList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Mesh::PropertyMeshKernel
A mesh kernel property. It can contain a mesh object. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import Mesh
    mesh = Mesh.Mesh()

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Mesh::PropertyMeshKernel', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = mesh
    obj.ThePropertyName // returns mesh

Mesh::PropertyNormalList
A Template:TODOnormalList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Mesh::PropertyNormalList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Part::PropertyFilletEdges
A Template:TODOfilletEdges property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Part::PropertyFilletEdges', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"
    Part::PropertyGeometryList
    A Template:TODOgeometryList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Part::PropertyGeometryList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Part::PropertyPartShape
A part shape property. It can contain shape object. For more details, see the section about Creating a FeaturePython object and adding a property to it.

    import Part
    part = Part.Shape()

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Part::PropertyPartShape', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = part
    obj.ThePropertyName // returns part

Part::PropertyShapeHistory
A Template:TODOshapeHistory property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Part::PropertyShapeHistory', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Path::PropertyPath
A Template:TODOpath property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Path::PropertyPath', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Path::PropertyTool
A Template:TODOtool property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Path::PropertyTool', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Path::PropertyTooltable
A Template:TODOtooltable property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Path::PropertyTooltable', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Sketcher::PropertyConstraintList
A Template:TODOconstraintList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Sketcher::PropertyConstraintList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Spreadsheet::PropertyColumnWidths
A Template:TODOcolumnWidths property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Spreadsheet::PropertyColumnWidths', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Spreadsheet::PropertyRowHeights
A Template:TODOrowHeights property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Spreadsheet::PropertyRowHeights', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Spreadsheet::PropertySheet
A Template:TODOsheet property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Spreadsheet::PropertySheet', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

Spreadsheet::PropertySpreadsheetQuantity
A Template:TODOspreadsheetQuantity property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('Spreadsheet::PropertySpreadsheetQuantity', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

TechDraw::PropertyCenterLineList
A Template:TODOcenterLineList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('TechDraw::PropertyCenterLineList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

TechDraw::PropertyCosmeticEdgeList
A Template:TODOcosmeticEdgeList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('TechDraw::PropertyCosmeticEdgeList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

TechDraw::PropertyCosmeticVertexList
A Template:TODOcosmeticVertexList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('TechDraw::PropertyCosmeticVertexList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"

TechDraw::PropertyGeomFormatList
A Template:TODOgeomFormatList property. It can contain Template:TODO"allowed type and/or values". For more details, see the section about Creating a FeaturePython object and adding a property to it.

    obj=FreeCAD.ActiveDocument.addObject("App::FeaturePython","InternalObjectName")
    obj.Label = "User-friendly label"
    obj.addProperty('TechDraw::PropertyGeomFormatList', 'ThePropertyName', 'Subsection', 'Description for tooltip')
    obj.ThePropertyName = [[:Template:TODO]]"example value for setter"
    obj.ThePropertyName // returns [[:Template:TODO]]"example value for getter"