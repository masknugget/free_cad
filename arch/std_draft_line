Line

    line = make_line(p1, p2)
    line = make_line(LineSegment)
    line = make_line(Shape)


    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    p1 = App.Vector(0, 0, 0)
    p2 = App.Vector(1000, 500, 0)
    p3 = App.Vector(-250, -500, 0)
    p4 = App.Vector(500, 1000, 0)

    line1 = Draft.make_line(p1, p2)
    line2 = Draft.make_line(p3, p4)

    doc.recompute()



polyline

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    p1 = App.Vector(0, 0, 0)
    p2 = App.Vector(1000, 1000, 0)
    p3 = App.Vector(2000, 0, 0)

    wire1 = Draft.make_wire([p1, p2, p3], closed=True)
    wire2 = Draft.make_wire([p1, 2*p3, 1.3*p2], closed=True)
    wire3 = Draft.make_wire([1.3*p3, p1, -1.7*p2], closed=True)

    doc.recompute()



Fillet

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    p1 = App.Vector(0, 0, 0)
    p2 = App.Vector(1000, 1000, 0)
    p3 = App.Vector(2000, 0, 0)

    line1 = Draft.make_line(p1, p2)
    line2 = Draft.make_line(p2, p3)

    doc.recompute()

    fillet = Draft.make_fillet([line1, line2], radius=500)

    doc.recompute()

Arc

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    arc1 = Draft.make_circle(200, startangle=0, endangle=90)
    arc2 = Draft.make_circle(500, startangle=20, endangle=160)
    arc3 = Draft.make_circle(750, startangle=-30, endangle=-150)

    doc.recompute()


Arc_3Points


    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    points = [App.Vector(0, 0, 0),
              App.Vector(5, 10, 0),
              App.Vector(10, 0, 0)]

    arc = Draft.make_arc_3points(points)

    doc.recompute()


Circle

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    circle1 = Draft.make_circle(200)

    zaxis = App.Vector(0, 0, 1)
    p2 = App.Vector(1000, 1000, 0)
    place2 = App.Placement(p2, App.Rotation(zaxis, 0))
    circle2 = Draft.make_circle(500, placement=place2)

    p3 = App.Vector(-1000, -1000, 0)
    place3 = App.Placement(p3, App.Rotation(zaxis, 0))
    circle3 = Draft.make_circle(750, placement=place3)

    doc.recompute()


Ellipse

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    ellipse1 = Draft.make_ellipse(3000, 200)
    ellipse2 = Draft.make_ellipse(700, 1000)

    zaxis = App.Vector(0, 0, 1)
    p3 = App.Vector(1000, 1000, 0)
    place3 = App.Placement(p3, App.Rotation(zaxis, 90))

    ellipse3 = Draft.make_ellipse(700, 1000, placement=place3)

    doc.recompute()


Rectangle

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    rectangle1 = Draft.make_rectangle(4000, 1000)
    rectangle2 = Draft.make_rectangle(1000, 4000)

    zaxis = App.Vector(0, 0, 1)
    p3 = App.Vector(1000, 1000, 0)
    place3 = App.Placement(p3, App.Rotation(zaxis, 45))

    rectangle3 = Draft.make_rectangle(3500, 250, placement=place3)

    doc.recompute()


Polygon

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    polygon1 = Draft.make_polygon(4, radius=500)
    polygon2 = Draft.make_polygon(5, radius=750)

    zaxis = App.Vector(0, 0, 1)
    p3 = App.Vector(1000, 1000, 0)
    place3 = App.Placement(p3, App.Rotation(zaxis, 90))

    Polygon3 = Draft.make_polygon(6, radius=1450, placement=place3)

    doc.recompute()


BSpline

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    p1 = App.Vector(0, 0, 0)
    p2 = App.Vector(1000, 1000, 0)
    p3 = App.Vector(2000, 0, 0)

    spline1 = Draft.make_bspline([p1, p2, p3], closed=False)
    spline2 = Draft.make_bspline([p1, 2*p3, 1.3*p2], closed=False)
    spline3 = Draft.make_bspline([1.3*p3, p1, -1.7*p2], closed=False)

    doc.recompute()


CubicBezCurve


    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    p1 = App.Vector(-3500, 0, 0)
    p2 = App.Vector(-3000, 2000, 0)
    p3 = App.Vector(-1100, 2000, 0)
    p4 = App.Vector(0, 0, 0)

    p5 = App.Vector(1500, -2000, 0)
    p6 = App.Vector(3000, -1500, 0)
    p7 = App.Vector(5000, 0, 0)
    p8 = App.Vector(6000, 1500, 0)
    rot = App.Rotation()

    c1 = Draft.make_circle(100, placement=App.Placement(p1, rot), face=False)
    c1.Label = "B1_E1"
    c2 = Draft.make_circle(50, placement=App.Placement(p2, rot), face=True)
    c2.Label = "B1_c1"
    c3 = Draft.make_circle(50, placement=App.Placement(p3, rot), face=True)
    c3.Label = "B1_c2"
    c4 = Draft.make_circle(100, placement=App.Placement(p4, rot), face=False)
    c4.Label = "B1_E2"
    c5 = Draft.make_circle(50, placement=App.Placement(p5, rot), face=True)
    c5.Label = "B2_c3"
    c6 = Draft.make_circle(50, placement=App.Placement(p6, rot), face=True)
    c6.Label = "B2_c4"
    c7 = Draft.make_circle(100, placement=App.Placement(p7, rot), face=False)
    c7.Label = "B2_E3"
    c8 = Draft.make_circle(50, placement=App.Placement(p8, rot), face=True)
    c8.Label = "B3_c5"

    doc.recompute()

    B1 = Draft.make_bezcurve([p1, p2], degree=3)
    B1.Label = "B_lin"
    B1.ViewObject.DrawStyle = "Dashed"

    B2 = Draft.make_bezcurve([p1, p2, p3], degree=3)
    B2.Label = "B_quad"
    B2.ViewObject.DrawStyle = "Dotted"

    B3 = Draft.make_bezcurve([p1, p2, p3, p4], degree=3)
    B3.Label = "B_cub"
    B3.ViewObject.LineWidth = 4

    B4 = Draft.make_bezcurve([p1, p2, p3, p4, p5], degree=3)
    B4.Label = "B_cub+lin"
    B4.ViewObject.DrawStyle = "Dashed"

    B5 = Draft.make_bezcurve([p1, p2, p3, p4, p5, p6], degree=3)
    B5.Label = "B_cub+quad"
    B5.ViewObject.DrawStyle = "Dotted"

    B6 = Draft.make_bezcurve([p1, p2, p3, p4, p5, p6, p7], degree=3)
    B6.Label = "B_cub+cub"
    B6.ViewObject.LineWidth = 2

    B7 = Draft.make_bezcurve([p1, p2, p3, p4, p5, p6, p7, p8], degree=3)
    B7.Label = "B_cub+cub+lin"
    B7.ViewObject.DrawStyle = "Dashed"

    doc.recompute()



Draft_BezCurve

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    p1 = App.Vector(0, 0, 0)
    p2 = App.Vector(1000, 1000, 0)
    p3 = App.Vector(2000, 0, 0)
    p4 = App.Vector(1500, -2000, 0)

    bezcurve1 = Draft.make_bezcurve([p1, p2, p3, p4], closed=True)
    bezcurve2 = Draft.make_bezcurve([p4, 1.3*p2, p1, 4.1*p3], closed=True)
    bezcurve3 = Draft.make_bezcurve([1.7*p3, 1.5*p4, 2.1*p2, p1], closed=True)

    doc.recompute()


Point


    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    point1 = Draft.make_point(1600, 1400, 0)

    p2 = App.Vector(-3200, 1800, 0)
    point2 = Draft.make_point(p2, color=(0.5, 0.3, 0.6), point_size=10)

    doc.recompute()




    import random
    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    L = 1000
    centered = App.Placement(App.Vector(-L, -L, 0), App.Rotation())
    rectangle = Draft.make_rectangle(2*L, 2*L, placement=centered)

    N = 10
    for i in range(N):
        x = 2*L*random.random() - L
        y = 2*L*random.random() - L
        z = 0
        r = random.random()
        g = random.random()
        b = random.random()
        size = 15*random.random() + 5
        Draft.make_point(x, y, z, color=(r, g, b), point_size=size)

    doc.recompute()


Draft_Facebinder


    import FreeCAD as App
    import FreeCADGui as Gui
    import Draft

    doc = App.newDocument()

    # Insert a solid box
    box = doc.addObject("Part::Box", "Box")
    box.Length = 2300
    box.Width = 800
    box.Height = 1000

    # selection = Gui.Selection.getSelectionEx()
    selection = [(box, ("Face1", "Face6"))]
    facebinder = Draft.make_facebinder(selection)
    facebinder.Extrusion = 50

    doc.recompute()

    facebinder.Placement.Base = App.Vector(1000, -1000, 100)
    facebinder.ViewObject.ShapeColor = (0.99, 0.99, 0.4)

    doc.recompute()



Draft_ShapeString

    import FreeCAD as App
    import Draft

    doc = App.newDocument()

    font1 = "/usr/share/fonts/truetype/msttcorefonts/Arial.ttf"
    font2 = "/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf"
    font3 = "/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf"

    S1 = Draft.make_shapestring("This is a sample text", font1, 200)

    S2 = Draft.make_shapestring("Inclined text", font2, 200, 10)

    zaxis = App.Vector(0, 0, 1)
    p2 = App.Vector(-1000, 500, 0)
    place2 = App.Placement(p2, App.Rotation(zaxis, 45))
    S2.Placement = place2

    S3 = Draft.make_shapestring("Upside-down text", font3, 200, 10)
    S3.Placement.Base = App.Vector(0, -1000, 0)
    S3.Placement.Rotation = App.Rotation(zaxis, 180)

    doc.recompute()



